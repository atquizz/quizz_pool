<?php

/**
 * Implement hooks_uninstall().
 */
function quizz_pool_uninstall() {
  // @TODO: Really?
  // field_delete_field('field_question_reference');
}

/**
 * Implements hook_schema().
 */
function quizz_pool_schema() {
  // Place to store user answers for pool questions
  $schema['quiz_pool_user_answers'] = array(
      'fields'      => array(
          'question_qid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'result_id'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'answer'       => array('type' => 'int', 'size' => 'tiny', 'default' => 0),
          'score'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      ),
      'primary key' => array(
          'result_id', 'question_qid', 'question_vid',
      ),
  );

  $schema['quiz_pool_user_answers_questions'] = array(
      'fields'      => array(
          'pool_qid'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'pool_vid'        => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_qid'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'result_id'       => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'answer'          => array('type' => 'blob', 'not null' => FALSE, 'size' => 'big', 'serialize' => TRUE, 'description' => 'A serialized array of answer.'),
          'is_evaluated'    => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0, 'not null' => TRUE),
          'is_correct'      => array('type' => 'int', 'unsigned' => TRUE, 'size' => 'tiny', 'default' => 0, 'not null' => TRUE),
          'score'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
          'answer_feedback' => array('type' => 'text'),
      ),
      'primary key' => array(
          'result_id', 'pool_qid', 'pool_vid', 'question_qid', 'question_vid',
      ),
  );

  return $schema;
}

/**
 * Implements hook_quiz_question_upgrade_schema_node_to_entity().
 */
function quizz_pool_quiz_question_upgrade_schema_node_to_entity() {
  if (db_field_exists('quiz_pool_user_answers', 'question_nid')) {
    db_change_field('quiz_pool_user_answers', 'question_nid', 'question_qid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
    db_change_field('quiz_pool_user_answers_questions', 'question_nid', 'question_qid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
    db_change_field('quiz_pool_user_answers_questions', 'pool_nid', 'pool_qid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
  }
}

/**
 * Implements hook_quiz_question_upgrade_pre_drop_temp_columns().
 */
function quizz_pool_quiz_question_upgrade_pre_drop_temp_columns() {
  // quiz_pool_user_answers
  db_query(
    "UPDATE {quiz_pool_user_answers} as ua"
    . " INNER JOIN {quiz_question_revision} qr ON ua.question_vid = qr.node_vid"
    . " SET ua.question_qid = qr.qid, ua.question_vid = qr.vid"
    . " WHERE 1"
  );

  // quiz_pool_user_answers_questions
  db_query(
    "UPDATE {quiz_pool_user_answers_questions} as uq"
    . " INNER JOIN {quiz_question_revision} qr ON uq.question_vid = qr.node_vid"
    . " SET uq.question_qid = qr.qid, uq.question_vid = qr.vid"
    . " WHERE 1"
  );
}

/**
 * Make sure update script from main module is run before all.
 */
function quizz_pool_update_7600() {
  require_once drupal_get_path('module', 'quizz_question') . '/quizz_question.install';
  return quizz_question_update_7600();
}
